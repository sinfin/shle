# -*- mode: ruby -*-
# https://devcenter.heroku.com/articles/rails-unicorn
env = ENV['RACK_ENV'].to_sym

if [ :production, :staging ].include?(env)
  app_dir = File.expand_path('../../', __FILE__)

  preload_app true
  timeout 60

  working_directory app_dir
  user "rails"

  FileUtils.mkdir_p "./tmp/sockets"
  FileUtils.mkdir_p "./tmp/pids"
  pid "./tmp/pids/unicorn.pid"

  stderr_path "log/unicorn.log"
  stdout_path "log/unicorn.log"

  before_fork do |_server, _worker|
    Signal.trap "TERM" do
      puts "Unicorn master intercepting TERM, sending myself QUIT instead"
      Process.kill "QUIT", Process.pid
    end

    if defined? ActiveRecord::Base
      ActiveRecord::Base.connection.disconnect!
    end
  end

  after_fork do |_server, _worker|
    Signal.trap "TERM" do
      puts "Unicorn worker intercepting TERM, waiting for master to send QUIT"
    end

    if defined? ActiveRecord::Base
      config = ActiveRecord::Base.configurations[Rails.env] ||
        Rails.application.config.database_configuration[Rails.env]
      config["reaping_frequency"] = (ENV["DB_REAPING_FREQUENCY"] || 10).to_i
      config["pool"] = (ENV["DB_POOL"] || 2).to_i
      ActiveRecord::Base.establish_connection(config)
    end
  end

  before_exec do |server|
    ENV['BUNDLE_GEMFILE'] = "#{app_dir}/Gemfile"
  end
end


case env
when :production
  worker_processes 2
  listen "./tmp/sockets/unicorn.sock", :backlog => 64
  listen <%= production_port %>, :tcp_nopush => true
when :staging
  worker_processes 1
  listen <%= dev_port %>
else
  worker_processes 1
  listen '0.0.0.0:<%= dev_port %>'
  timeout 999999
end
