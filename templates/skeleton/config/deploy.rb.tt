# -*- coding: utf-8 -*-
require 'mina/bundler'
require 'mina/rails'
require 'mina/git'
require 'active_support'
require 'yaml'

require_relative 'deploy/utils'
require_relative 'deploy/digital_ocean'

set :appname, '<%= app_name %>'
set :db_name, '<%= app_name %>'
set :droplet_name, 'www.example.com' # Please, fill primary domain
set :repository, 'git@bitbucket.org:Sinfin/<%= app_name %>.git'
set :branch, 'master'


task :production do
  begin
    droplet_conf = YAML.load_file "config/droplet.yml"
    set :domain, droplet_conf[:ipv4]
  rescue
    set :domain, "0.0.0.0"
  end

  set :rails_env, 'production'
  set :deploy_to, "/home/rails/#{appname}"
end


task :staging do
  set :rails_env, 'staging'
  set :domain, "staging.sinfin.io"
  set :deploy_to, "/home/rails/#{appname}"
end


set :shared_paths, ['log','public/system','.env']
set :user, 'rails'
set :forward_agent, true

task :environment do
end


task :setup => :environment do
  create_shared_dir 'log'
  create_shared_dir 'tmp/sockets'
  create_shared_dir 'tmp/pids'
  create_shared_dir 'config'
  create_shared_dir 'public/system'
  # upload "config/deploy/#{rails_env}/database.yml", "#{deploy_to}/#{shared_path}/config/database.yml"
  # upload "config/deploy/#{rails_env}/secrets.yml", "#{deploy_to}/#{shared_path}/config/secrets.yml"
  upload "config/deploy/#{rails_env}/.env", "#{deploy_to}/#{shared_path}/.env"
end

desc "Deploys the current version to the server."
task :deploy => :environment do
  deploy do
    # Put things that will set up an empty directory into a fully set-up
    # instance of your project.
    invoke :'git:clone'
    invoke :'deploy:link_shared_paths'
    invoke :'bundle:install'
    invoke :'rails:db_migrate'
    invoke :'rails:assets_precompile'
    invoke :'deploy:cleanup'

    to :launch do
      invoke :'unicorn:start_or_restart'
      # queue "bundle exec whenever -w"
    end
  end
end

namespace :install do
  task :create_droplet do
    create_droplet(primary_domain)
  end

  task :create_db do
    if rails_env == 'production'              
      cmd = "psql -d template1 --host=10.133.186.96 --username=#{appname} -password -c 'CREATE DATABASE #{appname}_#{rails_env}'"
      run cmd
    end
  end

  task :upstart do
    foreman_export
    foreman_upload
  end

  task :nginx do
    queue "sudo rm -f /etc/nginx/sites-enabled/default"
    sudo_upload './config/deploy/nginx.conf', "/etc/nginx/sites-enabled/#{appname}.conf"
    queue 'sudo service nginx restart'
  end

end


namespace :unicorn do
  task :start do
    queue "sudo start #{appname}"
  end

  task :restart do
    queue "sudo restart #{appname}"
  end

  task :start_or_restart do
    status = capture "sudo status #{appname}"

    if status.strip == "#{appname} stop/waiting"
      puts 'Cold start triggered'
      invoke :'unicorn:start'
    else
      puts 'Restart triggered'
      invoke :'unicorn:restart'
    end
  end

  task :stop do
    queue "sudo stop #{appname}"
  end
end


namespace :log do
  task :app do
    queue! "tail -f #{deploy_to}/#{shared_path}/log/#{rails_env}.log"
  end

  task :upstart do
    queue! "tail -f #{deploy_to}/#{shared_path}/log/#{rails_env}.log"
  end

  task :unicorn do
    queue! "tail -f #{deploy_to}/#{shared_path}/log/unicorn.log"
  end

  task :nginx do
    queue! "sudo tail -f /var/log/nginx/#{appname}-error.log"
  end
end


# For help in making your deploy script, see the Mina documentation:
#
#  - http://nadarei.co/mina
#  - http://nadarei.co/mina/tasks
#  - http://nadarei.co/mina/settings
#  - http://nadarei.co/mina/helpers
